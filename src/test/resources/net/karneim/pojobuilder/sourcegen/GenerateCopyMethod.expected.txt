package com.example.output;

import javax.annotation.processing.Generated;
import net.karneim.pojobuilder.GwtIncompatible;

@Generated("PojoBuilder")
public class SampleBuilder
    implements Cloneable {
  protected SampleBuilder self;
  protected boolean value$someBoolean$boolean;
  protected boolean isSet$someBoolean$boolean;
  protected char value$someChar$char;
  protected boolean isSet$someChar$char;
  protected String value$someString$java$lang$String;
  protected boolean isSet$someString$java$lang$String;

  /**
   * Creates a new {@link SampleBuilder}.
   */
  public SampleBuilder() {
    self = (SampleBuilder)this;
  }

  /**
   * Sets the default value for the {@link Sample#someBoolean} property.
   *
   * @param value the default value
   * @return this builder
   */
  public SampleBuilder withSomeBoolean(boolean value) {
    this.value$someBoolean$boolean = value;
    this.isSet$someBoolean$boolean = true;
    return self;
  }

  /**
   * Sets the default value for the {@link Sample#someChar} property.
   *
   * @param value the default value
   * @return this builder
   */
  public SampleBuilder withSomeChar(char value) {
    this.value$someChar$char = value;
    this.isSet$someChar$char = true;
    return self;
  }

  /**
   * Sets the default value for the {@link Sample#someString} property.
   *
   * @param value the default value
   * @return this builder
   */
  public SampleBuilder withSomeString(String value) {
    this.value$someString$java$lang$String = value;
    this.isSet$someString$java$lang$String = true;
    return self;
  }

  /**
   * Returns a clone of this builder.
   *
   * @return the clone
   */
  @Override
  @GwtIncompatible
  public Object clone() {
    try {
      SampleBuilder result = (SampleBuilder)super.clone();
      result.self = result;
      return result;
    } catch (CloneNotSupportedException e) {
      throw new InternalError(e.getMessage());
    }
  }

  /**
   * Returns a clone of this builder.
   *
   * @return the clone
   */
  @GwtIncompatible
  public SampleBuilder but() {
    return (SampleBuilder)clone();
  }

  /**
   * Copies the values from the given pojo into this builder.
   *
   * @param pojo
   * @return this builder
   */
  public SampleBuilder copy(Sample pojo) {
    withSomeChar(pojo.getSomeChar());
    withSomeString(pojo.getSomeString());
    withSomeBoolean(pojo.someBoolean);
    return self;
  }

  /**
   * Creates a new {@link Sample} based on this builder's settings.
   *
   * @return the created Sample
   */
  public Sample build() {
    try {
      Sample result = new Sample();
      if (isSet$someChar$char) {
        result.setSomeChar(value$someChar$char);
      }
      if (isSet$someString$java$lang$String) {
        result.setSomeString(value$someString$java$lang$String);
      }
      if (isSet$someBoolean$boolean) {
        result.someBoolean = value$someBoolean$boolean;
      }
      return result;
    } catch (RuntimeException ex) {
      throw ex;
    } catch (Exception ex) {
      throw new RuntimeException(ex);
    }
  }
}
